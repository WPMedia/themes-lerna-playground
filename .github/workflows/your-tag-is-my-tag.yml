name: Tag all versions of another tag this new tag 
on: 
  workflow_dispatch:
    inputs:
      target_release_tag:
        description: 'Preexisting release tag that you want to tag all versions of'
        required: true
      new_release_tag:
        description: 'New release tag that will be used to tag all versions of the target tag'
        required: true

jobs:
  retag:
    name: Tag all versions of another tag this new tag
    runs-on: ubuntu-latest
    env: 
      TARGET_RELEASE_TAG: ${{ github.event.inputs.target_release_tag }}
      NEW_RELEASE_TAG: ${{ github.event.inputs.new_release_tag }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node and NPM
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'
          

      # - name: Install lerna
      #   run: npm i -g lerna

      # - name: Show versions of target tag 
      #   run: lerna ls --all --json | jq -r '.[] | .version' | grep ${{ env.TARGET_RELEASE_TAG }}

      # https://github.com/lerna/lerna/issues/2058#issuecomment-487783429
      # - name: Retag 
      #   run: npx lerna exec --stream --no-bail --concurrency 1 -- 'PKG_VERSION=$(npm v . dist-tags.next); [ -n "$PKG_VERSION" ] && ( npm dist-tag add ${LERNA_PACKAGE_NAME}@${PKG_VERSION} latest && npm dist-tag rm $LERNA_PACKAGE_NAME next ) || exit 0'

      - name: Show versions of target individual one
        run: npx lerna exec --no-bail --parallel -- npm view \${LERNA_PACKAGE_NAME}@${{ env.TARGET_RELEASE_TAG }} version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version of target tag and point the new tag to that version
        run: npx lerna exec --no-bail --parallel -- npm dist-tag add \${LERNA_PACKAGE_NAME}@$(npm view ${LERNA_PACKAGE_NAME}@${{env.TARGET_RELEASE_TAG}} version) ${{ env.NEW_RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}